{"version":3,"sources":["components/Notification.js","components/Footer.js","services/notes.js","services/login.js","components/LoginForm.js","components/Togglable.js","components/NoteForm.js","components/Note.js","components/NotesToShow.js","components/ShowLogin.js","App.js","index.js"],"names":["Notification","message","className","Footer","style","color","fontStyle","fontSize","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","Form","onSubmit","Group","Label","Control","value","onChange","type","Button","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","variant","onClick","buttonLabel","children","displayName","NoteForm","createNote","newNote","setNewNote","event","preventDefault","content","important","target","Note","note","toggleImportance","label","size","NotesToShow","setShowAll","showAll","notesToShow","toggleImportanceOf","Table","striped","map","i","key","ShowLogin","user","loginForm","noteForm","name","App","notes","setNotes","errorMessage","setErrorMessage","setUsername","setPassword","setUser","noteFormRef","createRef","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","noteObject","current","returnedNote","concat","handleLogin","loginService","setItem","stringify","setTimeout","filter","find","n","changedNote","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cc9e598.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>I completed the React fullstack program at Full stack open, University of Helsinki 2020. Currently looking for employment.</em>\n    </div>\n  )\n}\n\nexport default Footer","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form, Button } from 'react-bootstrap'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Label>username</Form.Label>\n          <Form.Control\n            id=\"username\"\n            value={username}\n            onChange={handleUsernameChange}\n          />\n          <Form.Label>password</Form.Label>\n          <Form.Control\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n          <Button id=\"login-button\" type=\"submit\">\n            login\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'react-bootstrap'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button variant='success' onClick={toggleVisibility}>{props.buttonLabel}</Button>\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        {props.children}\n        <Button variant='warning' onClick={toggleVisibility}>cancel</Button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst NoteForm = ({ createNote }) => {\n  const [newNote, setNewNote] = useState('')\n\n  const handleChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    createNote({\n      content: newNote,\n      important: false,\n    })\n\n    setNewNote('')\n  }\n\n  return (\n    <div>\n      <h2>Create a new note</h2>\n\n      <Form onSubmit={addNote}>\n        <Form.Group>\n          <Form.Control\n            value={newNote}\n            onChange={handleChange}\n          />\n          <Button variant='success' type=\"submit\">save</Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default NoteForm","import React from 'react'\nimport { Button } from 'react-bootstrap'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <td>\n      {note.content}\n      &nbsp;&nbsp;\n      <Button variant='outline-primary' size='sm' onClick={toggleImportance}>{label}</Button>\n    </td>\n  )\n}\n\nexport default Note","import React from 'react'\nimport Note from './Note'\nimport { Button, Table } from 'react-bootstrap'\n\nconst NotesToShow = ({ setShowAll, showAll, notesToShow, toggleImportanceOf }) => {\n  return (\n    <div>\n      <div>\n        <Button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </Button>\n      </div>\n      <Table striped>\n        {/* <thead>\n          <tr>\n            <th>Notes</th>\n          </tr>\n        </thead> */}\n        <tbody>\n          {notesToShow.map((note, i) =>\n            <tr key={i}>\n              <Note\n                key={i}\n                note={note}\n                toggleImportance={() => toggleImportanceOf(note.id)}\n              />\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default NotesToShow","import React from 'react'\n\nconst ShowLogin = ({ user, loginForm, noteForm }) => {\n  return (\n    <div>\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>{user.name} logged in</p>\n          {noteForm()}\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default ShowLogin","import React, { useState, useEffect } from 'react'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\nimport loginService from './services/login'\nimport LoginForm from './components/LoginForm'\nimport Togglable from './components/Togglable'\nimport NoteForm from './components/NoteForm'\nimport NotesToShow from './components/NotesToShow'\nimport ShowLogin from './components/ShowLogin'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  const noteFormRef = React.createRef()\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  const addNote = (noteObject) => {\n    noteFormRef.current.toggleVisibility()\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n      })\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      )\n\n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const loginForm = () => (\n    <Togglable buttonLabel='login'>\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n\n  const noteForm = () => (\n    <Togglable buttonLabel='new note' ref={noteFormRef}>\n      <NoteForm createNote={addNote} />\n    </Togglable>\n  )\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div className='container'>\n      <h1>Notes App</h1>\n      <Notification message={errorMessage} />\n\n      <ShowLogin\n        user={user}\n        loginForm={loginForm}\n        noteForm={noteForm}\n      />\n      <br />\n      <NotesToShow\n        notesToShow={notesToShow}\n        toggleImportanceOf={toggleImportanceOf}\n        showAll={showAll}\n        setShowAll={setShowAll}\n      />\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}