{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","services/login.js","components/LoginForm.js","components/Togglable.js","components/NoteForm.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","value","onChange","type","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","NoteForm","createNote","newNote","setNewNote","event","preventDefault","Math","random","target","App","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","setUsername","setPassword","user","setUser","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","noteObject","noteFormRef","current","returnedNote","concat","handleLogin","loginService","setItem","stringify","setTimeout","createRef","notesToShow","filter","name","map","i","key","find","n","changedNote","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e4d8065.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content} \n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n    </div>\n  )\n}\n\nexport default Footer","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n   handleSubmit,\n   handleUsernameChange,\n   handlePasswordChange,\n   username,\n   password\n  }) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n      </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n  \n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React, {useState} from 'react' \n\nconst NoteForm = ({ createNote }) => {\n  const [newNote, setNewNote] = useState('') \n\n  const handleChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    createNote({\n      content: newNote,\n      important: Math.random() > 0.5,\n    })\n\n    setNewNote('')\n  }\n\n  return (\n    <div>\n      <h2>Create a new note</h2>\n\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NoteForm","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\nimport loginService from './services/login'\nimport LoginForm from './components/LoginForm' \nimport Togglable from './components/Togglable'\nimport NoteForm from './components/NoteForm'\n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  const addNote = (noteObject) => {\n    noteFormRef.current.toggleVisibility()\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {     \n        setNotes(notes.concat(returnedNote))\n      })\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)   \n      })\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      ) \n\n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const loginForm = () => (\n    <Togglable buttonLabel='login'>\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n\n  const noteFormRef = React.createRef()\n\n  const noteForm = () => (\n    <Togglable buttonLabel='new note' ref={noteFormRef}>\n      <NoteForm createNote={addNote} />\n    </Togglable>\n  )\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>{user.name} logged in</p>\n          {noteForm()}\n        </div>\n      }\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>      \n      <ul>\n        {notesToShow.map((note, i) => \n          <Note\n            key={i}\n            note={note} \n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}